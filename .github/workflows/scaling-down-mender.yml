name: Scale Down Mender Namespace and Node Group

on:
  workflow_dispatch:
    inputs:
    namespace:
      description: 'Namespace to scale down'
      required: false
      default: 'mender'
    nodegroup_min:
      description: 'Minimum node group size'
      required: false
      default: '1'
    nodegroup_max:
      description: 'Maximum node group size'
      required: false
      default: '1'
    nodegroup_desired:
      description: 'Desired node group size'
      required: false
      default: '1'

jobs:
  scale-down:
    name: Scale Deployments, StatefulSets & Node Group
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig \
            --region ${{ secrets.AWS_REGION }} \
            --name ${{ secrets.EKS_CLUSTER_NAME }}

      - name: Scale Deployments to 0
        run: |
          kubectl get deployments -n mender -o name | while read dep; do
            echo "Scaling $dep to 0 replicas"
            kubectl scale $dep -n mender --replicas=0
          done

      - name: Scale StatefulSets to 0
        run: |
          kubectl get statefulsets -n mender -o name | while read sts; do
            echo "Scaling $sts to 0 replicas"
            kubectl scale $sts -n mender --replicas=0
          done

      - name: Scale Node Group to 1
        run: |
          aws eks update-nodegroup-config \
            --cluster-name ${{ secrets.EKS_CLUSTER_NAME }} \
            --nodegroup-name ${{ secrets.EKS_NODEGROUP_NAME }} \
            --scaling-config minSize=1,maxSize=1,desiredSize=1
