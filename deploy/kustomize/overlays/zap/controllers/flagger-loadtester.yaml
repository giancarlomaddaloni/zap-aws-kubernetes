replicaCount: 1

image:
  repository: 1XXXXXXXXXX.dkr.ecr.us-east-1.amazonaws.com/fluxcd/flagger-loadtester
  tag: 0.35.0
  pullPolicy: IfNotPresent
  pullSecret:

# podLabels:
#   appmesh.k8s.aws/ports: 8080




# namespace: "zap-demo"

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "8080"

podPriorityClassName: ""

logLevel: info
cmd:
  timeout: 1h
  namespaceRegexp: ""

nameOverride: ""
fullnameOverride: ""

env: []

service:
  type: ClusterIP
  port: 8080

resources:
  requests:
    cpu: 10m
    memory: 64Mi

volumes: []
volumeMounts: []

nodeSelector: {}

tolerations: []

affinity: {}

rbac:
  # rbac.create: `true` if rbac resources should be created
  create: true
  # rbac.scope: `cluster` to create cluster-scope rbac resources (ClusterRole/ClusterRoleBinding)
  # otherwise, namespace-scope rbac resources will be created (Role/RoleBinding)
  scope:
  # rbac.rules: array of rules to apply to the role. example:
  rules:
  - apiGroups: ["batch"]
    resources: ["pods", "jobs", "jobs/log", "cronjobs", "cronjobs/log"]
    verbs: ["list", "get", "create", "watch"]
  # rules: []
  # annotations to add to the service account
  serviceAccountAnnotations: {}

# name of an existing service account to use - if not creating rbac resources
serviceAccountName: "zap-sa"

# App Mesh virtual node settings (to be used for AppMesh v1beta1)
# meshName: "global"
# backends:
#  - podinfo-primary.zap-demo
#  - podinfo.zap-demo

# App Mesh virtual node settings (to be used for AppMesh v1beta2)
appmesh:
  enabled: true
  backends:
  - podinfo.zap-demo
  - podinfo-canary.zap-demo

#Istio virtual service and gatway settings. TLS secrets should be in namespace before enbaled it. ( secret format loadtester.fullname )
istio:
  enabled: false
  host: flagger-loadtester.flagger
  gateway:
    enabled: false
  tls:
    enabled: false
    httpsRedirect: false

# when enabled, it will add a security context for the loadtester pod
securityContext:
  enabled: false
  context:
    readOnlyRootFilesystem: true
    runAsUser: 100
    runAsGroup: 101

podSecurityContext:
  enabled: false
  context:
    fsGroup: 101
    fsGroupChangePolicy: "OnRootMismatch"

podDisruptionBudget:
  enabled: false
  minAvailable: 1
